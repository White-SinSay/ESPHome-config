substitutions:
  plug_name: d1_mini_test
esphome:
  name: ${plug_name}
  platform: ESP8266
  board: d1_mini
  comment: Test

wifi:
  networks:
  - ssid: !secret ap_ssid
    password: !secret ap_password

  ap:
    ssid: "${plug_name} Hotspot"
    password: "J4buzjhCMSA2"
#  use_address: 192.168.90.119

captive_portal:

#web_server:
#  port: 80
#  auth:
#    username: white
#    password: Qwerty12345

logger:

ota:
  password: !secret ota
api:
  password: !secret api


#status_led:
#  pin:
#    number: D4
#    inverted: false

sensor:
  - platform: wifi_signal
    name: "${plug_name} WiFi"
    update_interval: 60s

  - platform: uptime
    id: device_uptime  

switch:
  - platform: restart
    name: "${plug_name} restart"

text_sensor:
  - platform: version
    name: "${plug_name} Version"
    hide_timestamp: True

  - platform: template
    name: "${plug_name} uptime"
    lambda: |-
      uint32_t uptime = (id(device_uptime).state);
      int minutes = (uptime % 3600) / 60;
      int hours = (uptime % 86400) / 3600;
      int days = uptime / 86400;
      if (days > 0) {
        return { (String(days) + " д." + String(hours) + " ч." + String(minutes) + " мин.").c_str() };
      }
      if (hours > 0) {
        return { (String(hours) + " ч. " + String(minutes) + " мин.").c_str() };
      } else {
        return { (String(minutes) + " мин.").c_str() };
      }
    update_interval: 60s
    icon: mdi:clock-start
